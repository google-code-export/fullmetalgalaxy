A verifier:
===========
- après le décollage de tout les astronefs d'un joueur, il faut passer son tour

TODO
====
- gestion du débarquement gratuit. (en t/t uniquement ?)
- ajout d'une variante respect strict des règles :
	- gestion du stock de pion
	- la réserve de point arrondi a 5 point (t/t uniquement)
	- les neutralisations tournante ne plaisent pas a tous...
	- ...
- ajouter un tache cron pour faire évoluer les parties non regardé.
- appeler updateEbGame plus régulièrement et même si aucune action n'est executé
- trouver un moyen simple de gérer des messages i18n, paramettrés, persitable facilement 
et transportable du serveur au client (package rpc).
- extraires toute les chaines dans les fichiers txt, corriger les fautes, i18n
- créer un fil rss des evenements (mise a jour, nouvelle partie, fin de partie)
- user manual

bugs :
======
- le flag fire disable n'est pas sauvegardé / remis à jours par exec/unexec.
- le marqueur "Tide" de la barge ne se met pas toujours a jours
- après le controle d'un astronef, le navigateur du joueur victime plante (null ptr...)
- si le tour change juste après qu'un joueur viens de se deconecter, le serveur le considère encore comme connecté et modifi sa date de fin de tour.
- Sur les partie en mode puzzle, si on annule des actions, cela n'annule pas les actions automatiques du aux triggers
- lorsque le champs original colors est différent de la couleurs des pions ca déconne (les pions se neutralisent eux mêmes ?)
- les clic juste au dessus du widget ContextExtra ne fonctionnent pas
 
Support des comptes :
=====================
- option perso: afficher/cacher l'email, avatar.
- procédure en cas de perte de mot de passe.
- OpenID

Améliorations de l'IHM:
=======================
- améliorer la page gamelist (utilise le cache, filtres, ...)
- chat: laisser les derniers messages qqu heures ? a voir avec des messages sur le plateau
- ammeliorer l'affichage du detail d'une partie + description partie + mail des joueurs
- look plus fini du widget info, liste de partie, de la fin de partie
- ammeliorer l'affichage des données contextuelles.
- parties protégé par mot de passe

- minimap: affichage des unitées
- amélioration des fonctions sociale, il faut 'sentir' les autres joueurs sur la partie.
  - Une page discussion associé a chaque partie (lié au chat ?) -> avec flux rss
  - ajout de marques sur la carte, pour le tutorial ou la comunication entre joueurs.
  - affichage de bulle d'aide indiquant le nom des joueurs sur les astronefs. 
	  Bulles s'effacent (->ou s'affiche) a l'approche du hightlight hexagon 
- possibilite d'avoir une image de fond pour le plateau.
- associer a chaque type de planete une couleur/image de fond. grille hexagonale.
- amélioration de la liste de partie
  -> localiser les exploitations sur une carte de la galaxie (en gros des sous repertoires 
     de partie)
- En haut a droite, a coté de son nom, avoir la liste de ses astronefs. Un clic sur l'un d'eux, centre la vue dessus.
- taille de plateau illimité
- rotation du plateau de jeu
- chat privé, envoie de messages privé (@adresse mail sans afficher l'adresse mail)
- gestion de l'atmosphere.

- ajouter des préferences d'affichages sur le compte. (bulles d'aides, nom des joueurs)
- Support des themes graphique (local et/ou distant)
- pour gérer de belle carte, on pourait avoir un 2nd blob qui nous indiques les bmp a 
utiliser. donc des bmp de bord


Amélioration de fond:
=====================
- Dans ServicesImpl, fusionner les deux methodes runAction & runEvent
- utiliser App Engine's High-Performance Image Serving System pour le chargement des images de fond de carte/mini-map.
- sauvegarder la liste des actions (gamelogs) dans un autre blob et ne pas tous les sérialisers vers le client (taille 18Ko -> 200Ko)
- utilisation de objectify a fond, optimisation du datastore et retirer les persistEntity.
- création des parties par l'import des fichiers full metal programme
- ne pas autoriser l'inscription a plus de 2 parties si aucune partie n'a été finis.
- comptage des points d'actions perdu -> servira entre autre a détecter les abandons lache (malus de points *2 + mail ?)
- ouverture au public de l'édition de scénario
- gérer les couleurs comme une simple enum sur le pion. Créer une relation bidirectionel 
  (table many2many) entre les pions et leurs propriétaires.
  -> ou bien faire une table couleur (un enregistrement par couleur et par partie) et chaque 
  pions pointe vers l'enregistrement approprié, de même pour les propriétaires.
- empiler les actions utilisateurs puis les annaliser avec un automate type parsseur de regexp.
- implementer un veritable MVC avec un onModelChange donnant en parametre le ou les beans modifier. 
    le controleur pourait ainsi gérer des transactions pour ne générer qu'un seul 
    onModelChange pour plusieurs modifs simultané
    -> ou le pojo est instrumenté pour prévenir le controleur des modifs
    -> ou le modificateur du pojo prévient le controleur
    -> ou le controleur permet de modifer la totalité du pojo. (généré ?)
- implementer un 'language' d'interface/skin pour séparer définitivement l'interface 
(css + layout + html statique) de la logique metier.
    les history token ne sont plus des MAppId mais des lieux de l'appli.
    chaques lieux est associé a un enssemble de widget et un layout
  ->un veritable skin serait donc constitué des css et des layouts et identifiable par 
  une url de base -> on telecharge ainsi un 'index' du skin, 
    les nom des ressources étant généré par md5 comme les imagesBundles.
  -> Autre possibilitée: implementer un générateur du type GWT.create("interface.html")
  -> il y a qqch dans le genre dans l'incubateur
  -> présent dans gwt2

A voir:
=======
- pour éviter un grand nombre d'event (et exec/unexec) faire une action move de plusieurs cases.
- utilisation de la lib java informa pour la lecture des flux RSS
- ou bien utiliser twiter pour les mises à jours

Variantes:
==========
- gestion des alliances (zone de feu communes)
- possibilité de configurer le stock de pion de base
- ajouter, en option, une pause de la partie le week-end.
- fenêtres de décolage aléatoire et prévisible via la pondeuse meteo.
- comptabiliser les points d'actions perdu.
- autre type de minerais
- création de scénario (avec pion incolore, pion foret)
- Variante de règle (pion supplémentaires, minerais supplémentaires, arbres, visibilité)
- carte hexagonal, cylindrique, torique, shpèrique ?
- Regroupement des pilotes en corporations
- En plus du tour par tour et de l'asynchrone: 
  -> envoie des ordres en aveugle et résolution simulané (cf diplomacy)
  -> tour/tour pour un grand nombre de joueur (plusieurs joueur en même temps)

nouvelles unités possible:
- hovercraft: tir a 2 cases, ne peu être transporté, ce déplace sur toute les cases 
sauf les montagnes (hoverchar ?)
- et un hovercrabe
- Tarask: une vedette qui tire a 3 cases
- une tourelle de défense: ne tire pas, ne se déplace pas, zone de feu a 3 cases, 
interdiction d'en mettre 2 cote cote, transportable que par le crabe
- un avion: termine tous ses déplacements sur une plaine, tir a 2 cases, pas de zone de feu
- un dirigeable de transport: occupe 2 cases, transport de 4, pas affecté par le terrain, 
2pt d'action par case de mvmt, transporte les unités marines ?
- missile...
- l'Ornitoptère, sorte de planeur qui bombarde, part de son astro et doit y rentrer dans le même tour, sous peine de se crasher.
- Le scorpion - lorsqu'il prend un minerai, il en sort deux mais n'a pas de capacité de transport, il faut donc un crabe dans une case adjacente.
  -> ou bien transport de 1 et tir a 2 cases (une seule munition), pas transportable.
  
Différences avec le jeu original:
=================================
- Pas de déploiement gratuit
- Pas de limite du nombre de pièce dans la construction
- arrondi des pt d'action
- pas d'embourbement volontaire
- prévisons de la prochaine marrée uniquement (même avec 2 pondeuses)
- a règle "entre deux tours, deux chars ne peuvent pas	stationner côte à côte sur des montagnes." a été adaptée à "si deux chars, du même propriétaire, sont côte à côte sur des montagnes, l'un des deux ne produit pas de zone de feu"
- La neutralisation est automatique et n'empêche pas de se déplacer. En revanche, un pion en mouvement ne créer pas de zone de feu (un pion ne peut donc pas pénétrer dans la zone de feu du pion qu'il neutralise)




